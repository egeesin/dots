# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  # pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd = {
      availableKernelModules = [
       "nvme"
       "xhci_pci"
       "ahci"
       "usbhid"
       "usb_storage"
       "sd_mod"
      ];
      kernelModules = [ ];
    };
    kernelModules = [
      "kvm-amd"
      "v4l2loopback"
      # For controlling monitor brightness
      # "zenpower" # Using Ryzen # Failed to insert module 'kvm_amd': Operation not supported
      "i2c-dev"
      "ddcci_backlight"
    ];
    extraModulePackages = [
      config.boot.kernelPackages.v4l2loopback
      # For controling monitor brightness
      config.boot.kernelPackages.ddcci-driver
    ];
  };
  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/b3f147a6-cdf8-4c0a-8c53-71a336b39d54";
      fsType = "ext4";
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/5FBD-6511";
      fsType = "vfat";
      options = [
       "fmask=0022"
       "dmask=0022" ];
    };
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/1d2e2783-8ce5-4526-a43f-442235c67ebb"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
