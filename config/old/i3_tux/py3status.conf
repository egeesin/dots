static_string{
	format = "Deneme"
}
clock{
	cycle = 30
	block_hours = "12"
	format = ["{Europe/London}", "{Europe/Istanbul}"]
	format_time = "{name_unclear} %H:%M"
# Requirement: pytz, tzlocal pyt libraries
}

clock{
	format = "{Europe/Istanbul}"
	format_time = "%Y-%m-%d %H:%M:%S"
}

xrandr {
    force_on_start = "eDP-1+HDMI2"
	output_combinations = "eDP1|eDP1+HDMI2"
    eDP-1_pos = "left-of HDMI2"
	format = "{output}"
    # VGA_workspaces = "7"
}

# wall clocks
# clock {
#     format = "{Asia/Calcutta} {Africa/Nairobi} {Asia/Bangkok}"
#     format_time = "{name} {icon}"
# }


arch_updates {
	cache_timeout = '600'
	format = ' {pacman}/{aur}'
	include_aur ='true'
# Requirement: cower
}
online_status{
	format = "{icon}"
	icon_off = "{■}"
	icon_on = "{●}"
	url = "https://www.google.com"
	
}
wifi{
	format = "W: {bitrate} {signal percent} {ssid}|W:down|"
	blocks = "_▁▂▃▄▅▆▇█"
}
timer{
	format= ' {timer}'
	# sound="to_your_sound_file"
	time= '600'
}
systemd vpn {
    unit = 'vpn.service'
    on_click 1 = 'exec sudo systemctl start vpn'
    on_click 3 = 'exec sudo systemctl stop vpn'
# Requirement: pydbus
}

mpd_status{
	port = "6600"
	state_pause = "{pause}"
	state_play = "{play}"
	state_stop = "{stop}"
# Requirement: python-mpd2 (not python2-mpd2)
}

# set github access credentials
# github {
#     format = "{repo} {issues}/{pull_requests} {notifications}'
#     format_notifications = 'N{notifications_count}'
#     auth_token = '40_char_hex_access_token'
#     username = 'my_username'
# }

#         # just check for any notifications
# github {
# 	auth_token = '40_char_hex_access_token'
#     username = 'my_username'
#     format = 'Github {notifications_count}'
# }

air_quality{
	auth_token = "35cfc1224afb25b6e0c9989e32953c7decac5431"
	location = "@4045" #Antalya
	# location = "@4103" #Eskişehir
	# location = "@4119" #Bolu
	# location = "@8512" #Ist-Basaksehir
	# location = "@4145" #Ist-Besiktas
	format = "{location}: {aqi} {category}"
	# for nearby locations: curl http://api.waqi.info/search/?token=YOUR_TOKEN&keyword=LOCATION
}
spotify {
    format = "{title} by {artist} -> {time}"
    format_down = ""
}
# define keyboard layouts that can be switched between
keyboard_layout {
    layouts = ['en', 'tralt', 'trq']
# Requirement: xbklayout-state or setxkbmap&xset
}
