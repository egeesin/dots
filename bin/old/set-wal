#!/bin/bash

# shellcheck source=../system/env

# Usage: set-wal <light|[dark]> <image>

# Exporting absolute path because of cron job.
# export DOT_DIR='/Users/ege/.dots'

. "$DOT_DIR/system/env" # $currentos, $archbits, $DOT_DIR $X_DIR etc.

if [[ $currentos == "Darwin" ]]; then
	# Default wal options for macOS
	# Skips unnecessary GTK, tty color generation.
	# Skips setting the wallpaper, leaves it that to osascript.
	walopt=-nets #Dark mode
else
	# Default wal options for the rest of the Linux distributions
	walopt=""
fi

modeopt="" # Set dark theme by default

getCurrentWallpaperPath() {
	currentWallpaper=$(osascript -e 'tell app "finder" to get posix path of (get desktop picture as alias)')
	if [ -f "$currentWallpaper" ]; then
		echo "Image not specified, reselecting current wallpaper..."
		sourceimg=$currentWallpaper
	else
		echo "WRN: Path of current wallpaper can not found, must've been moved or deleted. Skipping..." && return 1
	fi
}
randomSelectWallpaper(){
	sourcedir="$HOME/.extra/wallpaper"
	echo "Picking a random wallpaper..."
	if [ -d "$sourcedir" ]; then
		selectedSource=$(ls -1 "$sourcedir" | sort --random-sort | head -1)
		echo "$selectedSource"
		if [ "$selectedSource" ]; then
			echo "$selectedSource"
			sourceimg=$(greadlink -f "$sourcedir/$selectedSource" || readlink -f "$sourcedir/$selectedSource")
		else
			printf "ERR: There's no image in the selected wallpaper directory to random pick.\nAdd some wallpaper inside or choose an image.\nExiting set-wal.\n" && exit 0
		fi
	else
		if [[ $currentos == "Darwin" ]]; then
			printf "WRN: There's no wallpaper directory to random pick.\nPicking randomly from macOS system desktop pictures...\n"
			sourceimg=$(find /Library/Desktop\ Pictures/* -maxdepth 1 -not -type d | sort --random-sort | head -1)
		else
			echo "ERR: There's no wallpaper directory to random pick, exiting set-wal." && exit 0
		fi
	fi
}

# If image specified instead of mode
if [[ -f "$1" ]]; then
	sourceimg=$(greadlink -f "$1" || readlink -f "$1")
# If mode specified
elif [[ $1 =~ ^(d|dark|l|light)$ ]]; then
	if [ "$1" = "l" ] || [ "$1" = "light" ]; then
		echo "Chosen light theme";
		modeopt=-l
	elif [ "$1" = "d" ] || [ "$1" = "dark" ]; then
		echo "Chosen dark theme";
		modeopt=""
	fi
	if [[ -f "$2" ]]; then
		sourceimg=$(greadlink -f "$2" || readlink -f "$2")
	else
		# Select current path, if fails, randomly select from default macOS directory.
		getCurrentWallpaperPath || randomSelectWallpaper
	fi
# If nothing is specified
else
	getCurrentWallpaperPath || randomSelectWallpaper
fi

echo "Applying: $walopt | $sourceimg"
wal $modeopt $walopt -i "$sourceimg"

# Sublime Text
#
# mkdir -p ~/Library/Sublime\ Text\ 3/Packages/User/ # for Mac
# pywal_sublime.py

# macOS
#
# rm "$HOME"/Library/Application\ Support/Dock/desktoppicture.db
# killall Dock
sleep 2 && [[ $currentos == "Darwin" ]] && osascript -e 'tell application "Finder" to set desktop picture to POSIX file "'"$sourceimg"'"'
# killall Finder

# Firefox
#
# [[ -x $(which pywalfox) ]] && pywalfox update

# Alacritty
#
sleep 2 && "$DOT_DIR"/bin/alacritty-color-export

#if ! is_executable wal-discord && [[ $currentos = "Darwin" ]]; then

# Discord
#
# if [[ $currentos = "Darwin" ]]; then
# 	echo "Discord color updatingâ€¦"
# 	wal-discord
# 	cp ~/.cache/wal-discord/style.css ~/Library/Preferences/BetterDiscord/themes/wal-discord.theme.css
# fi
